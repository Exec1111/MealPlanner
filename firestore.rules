rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction helper pour vérifier l'authentification
    function isAuthenticated() {
      return request.auth != null;
    }

    // Fonction helper pour vérifier si c'est l'utilisateur démo
    function isDemoUser() {
      return request.auth.token.email == "julien.vacheyy@gmail.com";
    }

    // Fonction helper pour vérifier le propriétaire
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Fonction helper pour vérifier l'accès
    function hasAccess(userId) {
      return isDemoUser() || isOwner(userId);
    }

    // Règles pour les recettes
    match /recipes/{recipeId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if hasAccess(resource.data.userId);
    }
    
    // Règles pour les utilisateurs
    match /users/{userId} {
      allow read: if hasAccess(userId);
      allow write: if hasAccess(userId);
    }
    
    // Règles pour les listes de courses
    match /shopping_lists/{listId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if hasAccess(resource.data.userId);
    }

    // Règles pour les repas
    match /meals/{mealId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if hasAccess(resource.data.userId);
    }
  }
}